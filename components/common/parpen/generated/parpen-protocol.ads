--
--  Generated by RecordFlux 0.4.0-pre on 2020-03-07
--
--  Copyright (C) 2018-2020 Componolit GmbH
--
--  This file is distributed under the terms of the GNU Affero General Public License version 3.
--

package Parpen.Protocol with
  SPARK_Mode
is

   type Esc_Char_Base is range 0 .. 2**8 - 1 with
     Size =>
       8;

   subtype Esc_Char is Esc_Char_Base range 27 .. 27;

   pragma Warnings (Off, "precondition is statically false");

   function Unreachable_Protocol_Esc_Char return Protocol.Esc_Char is
     (Protocol.Esc_Char'First)
    with
     Pre =>
       False;

   pragma Warnings (On, "precondition is statically false");

   function Valid (Val : Protocol.Esc_Char_Base) return Boolean is
     (Val >= 27
      and Val <= 27);

   function Convert (Val : Protocol.Esc_Char_Base) return Protocol.Esc_Char is
     (Val)
    with
     Pre =>
       Valid (Val);

   type Connection_ID_Base is range 0 .. 2**32 - 1 with
     Size =>
       32;

   subtype Connection_ID is Connection_ID_Base range 1 .. 2**32 - 1;

   pragma Warnings (Off, "precondition is statically false");

   function Unreachable_Protocol_Connection_ID return Protocol.Connection_ID is
     (Protocol.Connection_ID'First)
    with
     Pre =>
       False;

   pragma Warnings (On, "precondition is statically false");

   function Valid (Val : Protocol.Connection_ID_Base) return Boolean is
     (Val >= 1);

   function Convert (Val : Protocol.Connection_ID_Base) return Protocol.Connection_ID is
     (Val)
    with
     Pre =>
       Valid (Val);

end Parpen.Protocol;
